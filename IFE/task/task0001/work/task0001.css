h1 {
    color: skyblue;
}

h2 {
    font-size: 14px;
}
/*
p {
    font-size: 12px;
    color: greenyellow;
    background-color: lightsteelblue;
}
*/

img {
    border: 2px;
    border-style: solid;
    border-color: coral;
}

strong {
    color: red;
}

.carrot {
    color: orange;
}

.spinach {
    color: green;
}

#first {
    font-style: italic;
}

body {
    font: 12px/1.5 Georgia, serif;
}

p#para01 {
    font-size: 34px;
    /* line-height: 150%; */
}

p#para02 {
    font-size: 20px;
    line-height: 15px;
}

p {
    color: blue;
    text-indent: 2em;
}

div.menu-bar ul ul {
    display: none;
}

div.menu-bar li:hover > ul {
    display: block;
}
/* 接下来是第六节的css */

div#six01 {
    background-color: brown;
    max-width: 960px;/* 高度不是固定，但宽度一定要有 */
    height: 960px;
    /* 方法一：用margin，若想兼顾老浏览器可加上text-align*/
    margin: 0 auto;

    /* 方法二：绝对定位+负边距*/
/*    position: absolute;*/
    /* top: 50%; */
/*
    left: 50%;
    margin-left: -480px;
*/
}

/* #six02是圆角矩形的部分，由于不使用border-radius，这里采用的是背景图法 */
div#six02 {
    margin-top: 100px;
    font-size: 13px;
    width: 50%;
}

#six02 .box {
    min-width: 150px;
    background-image: url(../img/radius_left_bottom.gif);
    background-color: white;
    background-repeat: no-repeat;
    background-position: left bottom;
}

#six02 .box-outer {
    background: url(../img/radius_right_bottom.gif) no-repeat right bottom;
    padding-bottom: 1em;
}

#six02 .box-inner {
    background: url(../img/radius_left_top.gif) no-repeat left top;
}

#six02 .box-fix {
    background: url(../img/radius_right_top.gif) no-repeat right top;
}
#six02 .box h3, #six02 .box p {
    padding: 2em;
}

/* #six03是两列布局部分 */
/* 方法一：相对绝对定位 */
/* 写的时候出现section块宽度很短，不知为何 : 问题错在应该用margin-left而不是同样绝对定位设left*/
div#six03 {
    margin-top: 100px;
}
#six03 * {
    margin: 0;
    padding: 0;
}

#six03 .main {
    height: 100px;
    border: 2px solid;
    position: relative;
}

#six03 .aside {
    height: inherit;
    background-color: aquamarine;
    width: 100px;
    position: absolute;
    top: 0;
    left: 0;
}

#six03 .section {
    height: inherit;
    background-color: cornflowerblue;
    margin-left: 110px;
}

#six03 .foot {
    width: 100%;
    height: 50px;
    background-color: brown;
}

/* 方法二：float 需要多加一个div包裹内容。*/
/*
#six03 .main {
    height: 100px;
}

#six03 .section {
    height: inherit;
    background-color: coral;
    float: left;
    width: 100%;
}

#six03 .section-wrap {
    margin-left: 200px;
}
#six03 .aside {
    height: inherit;
    background-color: darkblue;
    width: 190px;
    float: left;
    margin-left: -100%;
}

#six03 .foot {
    height: 50px;
    clear: both;
    background-color: darkorchid;
}*/

/* #six04来练习三列布局，左右两列固定，中间内容列自适应 */
#six04 {
    margin-top: 100px;
}

#six04 * {
    margin: 0;
    padding: 0;
}

/* 第一种方式依旧采用position定位和主内容的 margin-left */
/*
#six04 .container {
    height: 100px;
    border: 3px solid;
    position: relative;
}

#six04 .content {
    height: inherit;
    background-color: cadetblue;
    margin-left: 200px;
    margin-right: 250px;
}

#six04 .nav {
    height: inherit;
    background-color: darkmagenta;
    width: 190px;
    position: absolute;
    top: 0;
    left: 0;
}

#six04 .aside {
    height: inherit;
    background-color: burlywood;
    width: 240px;
    position: absolute;
    top: 0;
    right: 0;
}*/

/* 第二种用浮动 */
#six04 .container {
    height: 100px;
    width: 100%;
    border: 3px solid;
}

#six04 .content {
    width: 100%;
    float: left;
}

#six04 .content-wrap {
    height: 100px;
    margin-left: 200px;
    margin-right: 250px;
    background-color: aquamarine;
}

#six04 .nav {
    height: inherit;
    width: 190px;
    background-color: blueviolet;
    float: left;
    margin-left: -100%;
}

#six04 .aside {
    height: inherit;
    width: 240px;
    background-color: coral;
    float: left;
    margin-left: -240px;
}

/* 构建一个浮动布局，当窗口改变时，改变每一行的容器数量 */

#six05 {
    margin-top: 100px;
}

#six05 * {
    margin: 0;
    padding: 0;
}

#six05 .container {
    width: 100%;
    background-color: brown;
}

#six05 .box {
    width: 333px;
    height: 222px;
    background-color: aquamarine;
    margin-top: 20px;
    margin-left: 20px;
    float: left;
}

#six05 .container:after {
    content: '.';
    height: 0;
    visibility: hidden;
    display: block;
    clear: both;
}
