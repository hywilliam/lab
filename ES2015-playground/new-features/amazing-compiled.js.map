{"version":3,"sources":["amazing.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAKA,IAAI,IAAI,EAAE;AACN,QAAI,EAAC,GAAG,CAAC,CAAC;CACb;;;;;AAAA,AAKD,IAAI,IAAI,GAAG,EAAE,CAAC;;2BACL,GAAC;AACN,QAAI,CAAC,IAAI,CAAC;eAAI,GAAC;KAAA,CAAC,CAAC;;;AADrB,KAAK,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE;UAAtB,GAAC;CAET;AACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC;WAAE,CAAC,EAAE;CAAA,CAAC,CAAC;;;AAAC,AAG9B,IAAM,GAAG,GAAG,EAAC,GAAG,EAAE,CAAC,EAAC;;;AAAC,AAGrB,IAAI,IAAI,GAAG,KAAK,CAAC;AACjB,QAAM,IAAI,qCACkB,CAAC,GAAG,CAAC;;;;;AAAG,AAKpC,IAAI,CAAC,GAAG,CAAC,CAAC;AACV,IAAI,EAAE,GAAG,EAAC,CAAC,EAAD,CAAC,EAAC,CAAC;;AAEb,IAAI,GAAG,GAAG;AACN,KAAC,aAAC,CAAC,EAAC;AACA,eAAO,CAAC,GAAG,CAAC,CAAC;KAChB;CACJ,CAAC;AACF,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;;AAAC,AAGT,IAAI,GAAG,UAAG;AACN,YAAQ,sBAAE;AACN,yEAAmB,WAAW,CAAC;KAClC;CACJ,CAAC;AACF,GAAG,CAAC,QAAQ,EAAE;;;AAAC,AAGf,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AACxB,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AACxB,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC;;;AAAC;IAGjB,IAAI;AACN,aADE,IAAI,GACQ;8BADZ,IAAI;;AAEF,YAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC5B;;iBAHC,IAAI;;mCAKK;AACP,mBAAO,CAAC,IAAI,CAAC,WAAW,GAAG,MAAM,GAAG,OAAO,CAAA,GAAI,UAAU,CAAC;SAC7D;;;8BAEK;AACF,mBAAO,OAAO,CAAC;SAClB;;;WAXC,IAAI;;;IAcJ,IAAI;cAAJ,IAAI;;AACN,aADE,IAAI,GACQ;8BADZ,IAAI;;2EAAJ,IAAI;;AAGF,cAAK,WAAW,GAAG,IAAI,CAAC;;KAC3B;;WAJC,IAAI;GAAS,IAAI;;AAOvB,IAAI,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;AACxB,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;AACvB,OAAO,CAAC,GAAG,CAAC,KAAK,YAAY,IAAI,CAAC;;;AAAC;IAG7B,IAAI;aAAJ,IAAI;8BAAJ,IAAI;;;iBAAJ,IAAI;;iCAKG;AACL,mBAAO,KAAK,CAAC;SAChB;;;gCANc;AACX,mBAAO,OAAO,CAAC;SAClB;;;WAHC,IAAI;;;AASV,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;;;;;AAAC,WAKnB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAA7B,yCAA+B;AAA1B,QAAI,CAAC,WAAA,CAAA;AACN,WAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;CAClB;;;AAAA","file":"amazing-compiled.js","sourcesContent":["/**\n * hywilliam ::: 11/27/15.\n */\n\n// let - A block scope\nif (true) {\n    let x = 3;\n}\n//console.log(x);\n/* functions and vars can hoist, but classes and let won't */\n\n// Loop scoping\nlet vals = [];\nfor (let x = 0; x < 4; x += 1) {\n    vals.push(()=>x);\n}\nconsole.log(vals.map(x=>x()));\n\n// const\nconst obj = {bar: 3};\n\n// String Templates\nlet name = 'wyh';\n`Hi ${name},\nDid you know that 5 * 3 = ${5 * 3}?`\n/* ${} is evaluated */\n\n// Enhanced Object Literals\n// {x:x} short to {x}\nlet x = 3;\nlet xo = {x};\n\nlet foo = {\n    f(x){\n        return x + 1;\n    }\n};\nfoo.f(3);\n\n// Super 可以方便地调用父类的方法啦\nlet faa = {\n    toString(){\n        super.toString() + 'with faa!';\n    }\n};\nfaa.toString();\n\n// Symbols, 唯一的对象，用作 key 合适。\nlet s1 = Symbol('test');\nlet s2 = Symbol('test');\nconsole.log(s1 === s2);\n\n// Class, 类里面不能定义属性\nclass Jedi {\n    constructor() {\n        this.forceIsDark = false;\n    }\n\n    toString() {\n        return (this.forceIsDark ? 'Join' : 'Leave') + 'the dark';\n    }\n\n    foo() {\n        return 'hello';\n    }\n}\n\nclass Sith extends Jedi {\n    constructor() {\n        super();\n        this.forceIsDark = true;\n    }\n}\n\nlet parent = new Jedi();\nlet child = new Sith();\nconsole.log(child instanceof Sith);\n\n// Static functions: 静态方法，类自己使用，实例获取不到。\nclass Util {\n    static sayHi() {\n        return 'hello';\n    }\n\n    sayBye() {\n        return 'bye';\n    }\n}\nconsole.log(Util.sayHi());\nconsole.log(new Util().sayBye());\n\n// Get/Set 与 ES5 无差\n\n// iterator 约定, for...of 来实现循环取值\nfor (let n of ['a', 'b', 'c']) {\n    console.log(n);\n}\n\n/* 可迭代的数据源包括：Arrays, Strings, Maps, Sets, Dom queries, Arguments */\n\n\n"]}